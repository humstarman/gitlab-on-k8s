kind: ConfigMap
apiVersion: v1
metadata:
  name: maintainer-config 
  namespace: gitlab 
  labels:
    app: gitlab
data:
  maintainer.sh: |-
    #!/bin/bash
    set -e
    show_help () {
    cat << USAGE
    usage: $0 [ -p POD ] [ -n NAMESAPCE ] [ -k KEYWORD ] 
        -p : Specify the pod to watch.
        -n : Specify the namespace of the pod.
        -k : Specify the keyword to watch.
    USAGE
    exit 0
    }
    # Get Opts
    while getopts "hp:n:k:" opt; do # 选项后面的冒号表示该选项需要参数
        case "$opt" in
        h)  show_help
            ;;
        p)  POD=$OPTARG
            ;;
        n)  NS=$OPTARG
            ;;
        k)  KEY=$OPTARG
            ;;
        ?)  # 当有不认识的选项的时候arg为?
            echo "unkonw argument"
            exit 1
            ;;
        esac
    done
    [[ -z $* ]] && show_help
    chk_var () {
    if [ -z "$2" ]; then
      echo "$(date -d today +'%Y-%m-%d %H:%M:%S') - [ERROR] - no input for \"$1\", try \"$0 -h\"."
      sleep 3
      exit 1
    fi
    }
    chk_var -p $POD
    chk_var -n $NS
    chk_var -k $KEY
    chk_install () {
    if [ ! -x "$(command -v $1)" ]; then
      echo "$(date -d today +'%Y-%m-%d %H:%M:%S') - [ERROR] - no $1 installed !!!"
      sleep 3
      exit 1
    fi
    }
    NEEDS="kubectl"
    for NEED in $NEEDS; do
      chk_install $NEED
    done
    FILES=$(ls ${TO})
    if [[ -z ${FILES} ]]; then
      echo "$(date -d today +'%Y-%m-%d %H:%M:%S') - [WARN] - no files in ${TO}."
      echo "$(date -d today +'%Y-%m-%d %H:%M:%S') - [INFO] - cp files from ${FROM} to ${TO}.."
      cp -rf ${FROM}/. ${TO}
    else
      echo "$(date -d today +'%Y-%m-%d %H:%M:%S') - [INFO] - files found in ${TO}, skip."
    fi
    exit 0
